#!/bin/bash
#
# Read one or more files containing the output logs from shark execution
# and spits out CSV content with high-level stats about the execution
#
# ICRAR - International Centre for Radio Astronomy Research
# (c) UWA - The University of Western Australia, 2018
# Copyright by UWA (in the framework of the ICRAR)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

if [ $# -lt 1 ]; then
	echo "Usage: $0 <logfile1> <logfile2> ..."
	exit 1
fi

_total_secs() {
	read -d '' -r _sed_cmd <<EOF
s/.*$1 \\([0-9\\.]\\{1,\\}\\) \\[h\\]/(\\1 \* 3600)/p
s/.*$1 \\([0-9\\.]\\{1,\\}\\) \\[min\\]/(\\1 \* 60)/p
s/.*$1 \\([0-9\\.]\\{1,\\}\\) \\[s\\]/\\1/p
s/.*$1 \\([0-9\\.]\\{1,\\}\\) \\[ms\\]/(\\1. \\/ 1000)/p
EOF
	sum_expr=`sed -n "${_sed_cmd}" "$2" | paste -s -d +`
	echo "scale=4; $sum_expr" | bc
}

_n_threads() {
	sed -n 's/.*shark using \([0-9]\{1,\}\) thread(s)/\1/p' "$1"
}

_execution_total() {
	_total_secs 'Successfully finished in' "$1"
}

_evolution_total() {
	_total_secs 'Evolved galaxies in' "$1"
}

_hdf5_reading() {
	_total_secs 'Read raw data .* in' "$1"
}

_hdf5_writing() {
	_total_secs 'Galaxies data written in' "$1"
}

cat <<EOF
# This file has been automatically generated by the runtime_stats.sh
# utility found under the scripts/ directory of the shark repository.
#
# DO NOT MODIFY MANUALLY
#
# Please see the script's help for more information on how to use it
#
"# threads", "execution [s]", "evolution [s]", "io_read [s]", "io_write [s]", "filename"
EOF
for f in "$@"; do
	file_data=()
	file_data+=(`_n_threads "$f"`)
	file_data+=(`_execution_total "$f"`)
	file_data+=(`_evolution_total "$f"`)
	file_data+=(`_hdf5_reading "$f"`)
	file_data+=(`_hdf5_writing "$f"`)
	printf "%11d, %15.3f, %15.3f, %13.3f, %14.3f, \"$f\"\n" ${file_data[*]}
done
